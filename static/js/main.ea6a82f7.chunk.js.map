{"version":3,"sources":["LoginForm.js","index.js"],"names":["loginSchema","Yup","shape","password","min","max","required","email","LoginForm","handleSubmit","values","_ref","setSubmitting","setTimeout","alert","JSON","stringify","react_default","a","createElement","Fragment","formik_esm","initialValues","validationSchema","onSubmit","this","_ref2","isSubmitting","type","name","component","disabled","React","Component","App","className","src_LoginForm","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oPAIMA,EAAcC,WAAaC,MAAM,CACrCC,SAAUF,WACPG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,MAAON,WAAaM,MAAM,iBAAiBD,SAAS,cA4CvCE,8MAxCbC,aAAe,SAACC,EAADC,GAA+B,IAApBC,EAAoBD,EAApBC,cACxBC,WAAW,WACTC,MAAMC,KAAKC,UAAUN,EAAQ,KAAM,IACnCE,GAAc,IACb,kDAGL,WACE,OACEK,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEC,cAAe,CAAEf,MAAO,GAAIJ,SAAU,IACtCoB,iBAAkBvB,EAClBwB,SAAUC,KAAKhB,cAEd,SAAAiB,GAAsB,IAAnBC,EAAmBD,EAAnBC,aACF,OACEV,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAAA,uBACSF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOO,KAAK,QAAQC,KAAK,UAChCZ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAcQ,KAAK,QAAQC,UAAU,SAEvCb,EAAAC,EAAAC,cAAA,yBAEEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAOO,KAAK,WAAWC,KAAK,aAC5BZ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAcQ,KAAK,WAAWC,UAAU,SAE1Cb,EAAAC,EAAAC,cAAA,UAAQS,KAAK,SAASG,SAAUJ,GAAhC,qBA7BQK,IAAMC,kBCN9B,SAASC,IACP,OACEjB,EAAAC,EAAAC,cAAA,OAAKgB,UAAU,OACblB,EAAAC,EAAAC,cAACiB,EAAD,OAKN,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAOxB,EAAAC,EAAAC,cAACe,EAAD,MAASG","file":"static/js/main.ea6a82f7.chunk.js","sourcesContent":["import React from \"react\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst loginSchema = Yup.object().shape({\n  password: Yup.string()\n    .min(8, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  email: Yup.string().email(\"Invalid email\").required(\"Required\")\n});\n\nclass LoginForm extends React.Component {\n  handleSubmit = (values, { setSubmitting }) => {\n    setTimeout(() => {\n      alert(JSON.stringify(values, null, 2));\n      setSubmitting(false);\n    }, 400);\n  };\n\n  render() {\n    return (\n      <>\n        <h1>Login</h1>\n        <Formik\n          initialValues={{ email: \"\", password: \"\" }}\n          validationSchema={loginSchema}\n          onSubmit={this.handleSubmit}\n        >\n          {({ isSubmitting }) => {\n            return (\n              <Form>\n                <label>\n                  Email: <Field type=\"email\" name=\"email\" />\n                  <ErrorMessage name=\"email\" component=\"div\" />\n                </label>\n                <label>\n                  Password:\n                  <Field type=\"password\" name=\"password\" />\n                  <ErrorMessage name=\"password\" component=\"div\" />\n                </label>\n                <button type=\"submit\" disabled={isSubmitting}>\n                  Submit\n                </button>\n              </Form>\n            );\n          }}\n        </Formik>\n      </>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport LoginForm from \"./LoginForm\";\n\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <LoginForm />\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}